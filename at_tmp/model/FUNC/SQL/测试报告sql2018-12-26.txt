-- 回归测试报告-汇总栏（上线日期）
SELECT A.online_time,MIN(C.case_time) AS report_start_time,MAX(C.case_time) AS report_end_time,NOW() AS report_date,(CASE B.case_exe_env WHEN '1' THEN '测试环境' WHEN '2' THEN '灰度环境' ELSE '线上环境' END) AS report_env_type,COUNT(1) AS report_exe_counts,SUM(CASE C.case_result WHEN '1' THEN 1 ELSE 0 END) AS report_exe_pass,SUM(CASE C.case_result WHEN '2' THEN 1 WHEN '2' THEN 1 ELSE 0 END) AS report_exe_fail,SUM(CASE WHEN C.case_result IS NULL THEN 1 ELSE 0 END) AS report_exe_not FROM t_task_to_case M LEFT JOIN regress_task_info A ON A.task_id=M.task_id LEFT JOIN regress_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM regress_case_result T INNER JOIN (SELECT task_id,case_id,MAX(case_time) AS happen_time,1 AS num FROM regress_case_result GROUP BY task_id,case_id) S ON (T.task_id=T.task_id AND S.case_id=T.case_id AND S.happen_time=T.case_time)) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE A.online_time='2018-11-20' AND B.group_id LIKE '104%'
;

-- 回归测试报告-信息栏（上线日期）
SELECT M.group_desc,IFNULL(N.total,0) AS total_api,IFNULL(P.tc_total,0) AS total_regress,IFNULL(Q.tc_total,0) AS total_auto,IF(IFNULL(N.total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(O.total,0)/IFNULL(N.total,0))*100,5),'%')) AS rate_api,IF(IFNULL(P.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(Q.tc_total,0)/IFNULL(P.tc_total,0))*100,5),'%')) AS rate_cover,IF(IFNULL(P.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(R.tc_total,0)/IFNULL(P.tc_total,0))*100,5),'%')) AS rate_exec,IF(IFNULL(R.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(S.tc_total,0)/IFNULL(R.tc_total,0))*100,5),'%')) AS rate_pass FROM p_group_info M LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS total FROM api_case_info A INNER JOIN p_group_info B ON B.code=A.group_id GROUP BY LEFT(B.code,3)) N ON N.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS total FROM api_case_info A INNER JOIN p_group_info B ON B.code=A.group_id INNER JOIN (SELECT info_id FROM case_suite_info WHERE case_id IN (SELECT case_id FROM regress_case_info) GROUP BY info_id HAVING COUNT(1)>0) C ON C.info_id=A.api_id GROUP BY LEFT(B.code,3)) O ON O.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS tc_total FROM regress_case_info A INNER JOIN p_group_info B ON B.code=A.group_id WHERE A.case_exe_plugin IN ('200','201','202') GROUP BY LEFT(B.code,3)) P ON P.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS tc_total FROM regress_case_info A INNER JOIN p_group_info B ON B.code=A.group_id WHERE A.case_exe_plugin IN ('200','201','202') AND A.case_exe_type='2' GROUP BY LEFT(B.code,3)) Q ON Q.group_code=M.code LEFT JOIN (SELECT LEFT(C.code,3) AS group_code,COUNT(1) AS tc_total FROM (SELECT case_id FROM regress_case_result GROUP BY case_id) A INNER JOIN regress_case_info B ON B.case_id=A.case_id INNER JOIN p_group_info C ON C.code=B.group_id WHERE B.case_exe_plugin IN ('200','201','202') AND B.case_exe_type='2' GROUP BY LEFT(C.code,3)) R ON R.group_code=M.code LEFT JOIN (SELECT LEFT(C.code,3) AS group_code,COUNT(1) AS tc_total FROM (SELECT case_id FROM regress_case_result WHERE case_result='1' GROUP BY case_id) A INNER JOIN regress_case_info B ON B.case_id=A.case_id INNER JOIN p_group_info C ON C.code=B.group_id WHERE B.case_exe_plugin IN ('200','201','202') AND B.case_exe_type='2' GROUP BY LEFT(C.code,3)) S ON S.group_code=M.code WHERE LENGTH(M.code)='3' AND M.code LIKE '104%' ORDER BY M.code
;

-- 回归测试报告-失败栏（上线日期）
SELECT M.case_id,B.case_path,B.case_desc,(CASE B.case_exe_type WHEN '1' THEN '手工' WHEN '2' THEN '自动' END) case_exe_type,B.case_prev_data,IFNULL(C.num,0) AS case_exe_num,IFNULL(C.case_result,0) AS case_exe_result,IFNULL(C.case_real_result,'') AS case_exe_realresult FROM t_task_to_case M LEFT JOIN regress_task_info A ON A.task_id=M.task_id LEFT JOIN regress_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM regress_case_result T INNER JOIN (SELECT task_id,case_id,MAX(case_time) AS happen_time,1 AS num FROM regress_case_result GROUP BY task_id,case_id) S ON (T.task_id=T.task_id AND S.case_id=T.case_id AND S.happen_time=T.case_time)) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE A.online_time='2018-12-21' AND C.case_result!='1' AND B.group_id LIKE '104%'
;

-- 回归测试报告-明细栏（上线日期）
SELECT M.case_id,B.case_path,B.case_desc,(CASE B.case_exe_type WHEN '1' THEN '手工' WHEN '2' THEN '自动' END) case_exe_type,B.case_prev_data,IFNULL(C.num,0) AS case_exe_num,IFNULL(C.case_result,0) AS case_exe_result,IFNULL(C.case_real_result,'') AS case_exe_realresult FROM t_task_to_case M LEFT JOIN regress_task_info A ON A.task_id=M.task_id LEFT JOIN regress_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM regress_case_result T INNER JOIN (SELECT task_id,case_id,MAX(case_time) AS happen_time,1 AS num FROM regress_case_result GROUP BY task_id,case_id) S ON (T.task_id=T.task_id AND S.case_id=T.case_id AND S.happen_time=T.case_time)) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE A.online_time='2018-11-20' AND B.group_id LIKE '104%'
;

-- 回归测试报告-汇总栏（任务ID）
SELECT A.online_time,MIN(C.case_time) report_start_time,MAX(C.case_time) report_end_time,NOW() report_date,COUNT(1) report_exe_counts,(CASE B.case_exe_env  WHEN '1' THEN '测试环境' WHEN '2' THEN '灰度环境' ELSE '线上环境' END) report_env_type,SUM(CASE C.case_result WHEN '1' THEN 1 ELSE 0 END ) report_exe_pass,SUM(CASE C.case_result WHEN '2' THEN 1 ELSE 0 END) report_exe_fail,SUM(CASE C.case_result WHEN '3' THEN 1 ELSE 0 END) report_exe_exception,SUM(CASE WHEN C.case_result IS NULL THEN 1 ELSE 0 END) report_exe_not FROM t_task_to_case M LEFT JOIN regress_task_info A ON A.task_id=M.task_id LEFT JOIN regress_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM regress_case_result T INNER JOIN (SELECT task_id,case_id,MAX(case_time) AS happen_time,1 AS num FROM regress_case_result GROUP BY task_id,case_id) S ON (T.task_id=T.task_id AND S.case_id=T.case_id AND S.happen_time=T.case_time)) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE A.task_id='TASK_181120000188' AND B.group_id LIKE '104%'
;

-- 回归测试报告-信息栏（任务ID）
SELECT M.group_desc,IFNULL(N.total,0) AS total_api,IFNULL(P.tc_total,0) AS total_regress,IFNULL(Q.tc_total,0) AS total_auto,IF(IFNULL(N.total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(O.total,0)/IFNULL(N.total,0))*100,5),'%')) AS rate_api,IF(IFNULL(P.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(Q.tc_total,0)/IFNULL(P.tc_total,0))*100,5),'%')) AS rate_cover,IF(IFNULL(P.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(R.tc_total,0)/IFNULL(P.tc_total,0))*100,5),'%')) AS rate_exec,IF(IFNULL(R.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(S.tc_total,0)/IFNULL(R.tc_total,0))*100,5),'%')) AS rate_pass FROM p_group_info M LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS total FROM api_case_info A INNER JOIN p_group_info B ON B.code=A.group_id GROUP BY LEFT(B.code,3)) N ON N.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS total FROM api_case_info A INNER JOIN p_group_info B ON B.code=A.group_id INNER JOIN (SELECT info_id FROM case_suite_info WHERE case_id IN (SELECT case_id FROM regress_case_info) GROUP BY info_id HAVING COUNT(1)>0) C ON C.info_id=A.api_id GROUP BY LEFT(B.code,3)) O ON O.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS tc_total FROM regress_case_info A INNER JOIN p_group_info B ON B.code=A.group_id WHERE A.case_exe_plugin IN ('200','201','202') GROUP BY LEFT(B.code,3)) P ON P.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS tc_total FROM regress_case_info A INNER JOIN p_group_info B ON B.code=A.group_id WHERE A.case_exe_plugin IN ('200','201','202') AND A.case_exe_type='2' GROUP BY LEFT(B.code,3)) Q ON Q.group_code=M.code LEFT JOIN (SELECT LEFT(C.code,3) AS group_code,COUNT(1) AS tc_total FROM (SELECT case_id FROM regress_case_result GROUP BY case_id) A INNER JOIN regress_case_info B ON B.case_id=A.case_id INNER JOIN p_group_info C ON C.code=B.group_id WHERE B.case_exe_plugin IN ('200','201','202') AND B.case_exe_type='2' GROUP BY LEFT(C.code,3)) R ON R.group_code=M.code LEFT JOIN (SELECT LEFT(C.code,3) AS group_code,COUNT(1) AS tc_total FROM (SELECT case_id FROM regress_case_result WHERE case_result='1' GROUP BY case_id) A INNER JOIN regress_case_info B ON B.case_id=A.case_id INNER JOIN p_group_info C ON C.code=B.group_id WHERE B.case_exe_plugin IN ('200','201','202') AND B.case_exe_type='2' GROUP BY LEFT(C.code,3)) S ON S.group_code=M.code WHERE LENGTH(M.code)='3' AND M.code LIKE '104%' ORDER BY M.code
;

-- 回归测试报告-失败栏（任务ID）
SELECT M.case_id,B.case_path,B.case_desc,(CASE B.case_exe_type WHEN '1' THEN '手工' WHEN '2' THEN '自动' END) case_exe_type,B.case_prev_data,IFNULL(C.num,0) AS case_exe_num,IFNULL(C.case_result,0) AS case_exe_result,IFNULL(C.case_real_result,'') AS case_exe_realresult FROM t_task_to_case M LEFT JOIN regress_task_info A ON A.task_id=M.task_id LEFT JOIN regress_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM regress_case_result T INNER JOIN (SELECT task_id,case_id,MAX(case_time) AS happen_time,1 AS num FROM regress_case_result GROUP BY task_id,case_id) S ON (T.task_id=T.task_id AND S.case_id=T.case_id AND S.happen_time=T.case_time)) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE A.task_id='TASK_181120000188' AND C.case_result!='1' AND B.group_id LIKE '104%'
;

-- 回归测试报告-明细栏（任务ID）
SELECT M.case_id,B.case_path,B.case_desc,(CASE B.case_exe_type WHEN '1' THEN '手工' WHEN '2' THEN '自动' END) case_exe_type,B.case_prev_data,IFNULL(C.num,0) AS case_exe_num,IFNULL(C.case_result,0) AS case_exe_result,IFNULL(C.case_real_result,'') AS case_exe_realresult FROM t_task_to_case M LEFT JOIN regress_task_info A ON A.task_id=M.task_id LEFT JOIN regress_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM regress_case_result T INNER JOIN (SELECT task_id,case_id,MAX(case_time) AS happen_time,1 AS num FROM regress_case_result GROUP BY task_id,case_id) S ON (T.task_id=T.task_id AND S.case_id=T.case_id AND S.happen_time=T.case_time)) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE A.task_id='TASK_181120000188' AND B.group_id LIKE '104%'
;

-- 回归测试报告-汇总栏（批次ID）
SELECT A.online_time,MIN(C.case_time) report_start_time,MAX(C.case_time) report_end_time,NOW() report_date,COUNT(1) report_exe_counts,(CASE B.case_exe_env  WHEN '1' THEN '测试环境' WHEN '2' THEN '灰度环境' ELSE '线上环境' END) report_env_type,SUM(CASE C.case_result WHEN '1' THEN 1 ELSE 0 END ) report_exe_pass,SUM(CASE C.case_result WHEN '2' THEN 1 ELSE 0 END) report_exe_fail,SUM(CASE C.case_result WHEN '3' THEN 1 ELSE 0 END) report_exe_exception,SUM(CASE WHEN C.case_result IS NULL THEN 1 ELSE 0 END) report_exe_not FROM t_task_to_case M LEFT JOIN regress_task_info A ON A.task_id=M.task_id LEFT JOIN regress_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM regress_case_result T) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE C.batch_id='BATCH-20181114-03544' AND B.group_id LIKE '104%'
;

-- 回归测试报告-信息栏（批次ID）
SELECT M.group_desc,IFNULL(N.total,0) AS total_api,IFNULL(P.tc_total,0) AS total_regress,IFNULL(Q.tc_total,0) AS total_auto,IF(IFNULL(N.total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(O.total,0)/IFNULL(N.total,0))*100,5),'%')) AS rate_api,IF(IFNULL(P.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(Q.tc_total,0)/IFNULL(P.tc_total,0))*100,5),'%')) AS rate_cover,IF(IFNULL(P.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(R.tc_total,0)/IFNULL(P.tc_total,0))*100,5),'%')) AS rate_exec,IF(IFNULL(R.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(S.tc_total,0)/IFNULL(R.tc_total,0))*100,5),'%')) AS rate_pass FROM p_group_info M LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS total FROM api_case_info A INNER JOIN p_group_info B ON B.code=A.group_id GROUP BY LEFT(B.code,3)) N ON N.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS total FROM api_case_info A INNER JOIN p_group_info B ON B.code=A.group_id INNER JOIN (SELECT info_id FROM case_suite_info WHERE case_id IN (SELECT case_id FROM regress_case_info) GROUP BY info_id HAVING COUNT(1)>0) C ON C.info_id=A.api_id GROUP BY LEFT(B.code,3)) O ON O.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS tc_total FROM regress_case_info A INNER JOIN p_group_info B ON B.code=A.group_id WHERE A.case_exe_plugin IN ('200','201','202') GROUP BY LEFT(B.code,3)) P ON P.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS tc_total FROM regress_case_info A INNER JOIN p_group_info B ON B.code=A.group_id WHERE A.case_exe_plugin IN ('200','201','202') AND A.case_exe_type='2' GROUP BY LEFT(B.code,3)) Q ON Q.group_code=M.code LEFT JOIN (SELECT LEFT(C.code,3) AS group_code,COUNT(1) AS tc_total FROM (SELECT case_id FROM regress_case_result GROUP BY case_id) A INNER JOIN regress_case_info B ON B.case_id=A.case_id INNER JOIN p_group_info C ON C.code=B.group_id WHERE B.case_exe_plugin IN ('200','201','202') AND B.case_exe_type='2' GROUP BY LEFT(C.code,3)) R ON R.group_code=M.code LEFT JOIN (SELECT LEFT(C.code,3) AS group_code,COUNT(1) AS tc_total FROM (SELECT case_id FROM regress_case_result WHERE case_result='1' GROUP BY case_id) A INNER JOIN regress_case_info B ON B.case_id=A.case_id INNER JOIN p_group_info C ON C.code=B.group_id WHERE B.case_exe_plugin IN ('200','201','202') AND B.case_exe_type='2' GROUP BY LEFT(C.code,3)) S ON S.group_code=M.code WHERE LENGTH(M.code)='3' AND M.code LIKE '104%' ORDER BY M.code
;

-- 回归测试报告-失败栏（批次ID）
SELECT M.case_id,B.case_path,B.case_desc,(CASE B.case_exe_type WHEN '1' THEN '手工' WHEN '2' THEN '自动' END) case_exe_type,B.case_prev_data,IFNULL(C.num,0) AS case_exe_num,IFNULL(C.case_result,0) AS case_exe_result,IFNULL(C.case_real_result,'') AS case_exe_realresult FROM t_task_to_case M LEFT JOIN regress_task_info A ON A.task_id=M.task_id LEFT JOIN regress_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM regress_case_result T) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE C.batch_id='BATCH-20181114-03544' AND C.case_result!='1' AND B.group_id LIKE '104%'
;

-- 回归测试报告-明细栏（批次ID）
SELECT M.case_id,B.case_path,B.case_desc,(CASE B.case_exe_type WHEN '1' THEN '手工' WHEN '2' THEN '自动' END) case_exe_type,B.case_prev_data,IFNULL(C.num,0) AS case_exe_num,IFNULL(C.case_result,0) AS case_exe_result,IFNULL(C.case_real_result,'') AS case_exe_realresult FROM t_task_to_case M LEFT JOIN regress_task_info A ON A.task_id=M.task_id LEFT JOIN regress_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM regress_case_result T) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE C.batch_id='BATCH-20181114-03544' AND B.group_id LIKE '104%'
;

-- 线上测试任务列表
SELECT T.task_id,T.task_desc,T.task_type,T.online_time FROM core_task_info T WHERE T.group_id LIKE '104%' ORDER BY T.online_time DESC
;

-- 线上测试报告-汇总栏（上线日期）
SELECT A.online_time,MIN(C.case_time) report_start_time,MAX(C.case_time) report_end_time,NOW() report_date,COUNT(1) report_exe_counts,(CASE B.case_exe_env  WHEN '1' THEN '测试环境' WHEN '2' THEN '灰度环境' ELSE '线上环境' END) report_env_type,SUM(CASE C.case_result WHEN '1' THEN 1 ELSE 0 END ) report_exe_pass,SUM(CASE C.case_result WHEN '2' THEN 1 ELSE 0 END) report_exe_fail,SUM(CASE C.case_result WHEN '3' THEN 1 ELSE 0 END) report_exe_exception,SUM(CASE WHEN C.case_result IS NULL THEN 1 ELSE 0 END) report_exe_not FROM t_task_to_case M LEFT JOIN core_task_info A ON A.task_id=M.task_id LEFT JOIN core_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM core_case_result T INNER JOIN (SELECT task_id,case_id,MAX(case_time) AS happen_time,1 AS num FROM core_case_result GROUP BY task_id,case_id) S ON (T.task_id=T.task_id AND S.case_id=T.case_id AND S.happen_time=T.case_time)) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE A.online_time='2018-11-20' AND B.group_id LIKE '104%'
;

-- 线上测试报告-信息栏（上线日期）
SELECT M.group_desc,IFNULL(N.total,0) AS total_api,IFNULL(P.tc_total,0) AS total_core,IFNULL(Q.tc_total,0) AS total_auto,IF(IFNULL(N.total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(O.total,0)/IFNULL(N.total,0))*100,5),'%')) AS rate_api,IF(IFNULL(P.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(Q.tc_total,0)/IFNULL(P.tc_total,0))*100,5),'%')) AS rate_cover,IF(IFNULL(P.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(R.tc_total,0)/IFNULL(P.tc_total,0))*100,5),'%')) AS rate_exec,IF(IFNULL(R.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(S.tc_total,0)/IFNULL(R.tc_total,0))*100,5),'%')) AS rate_pass FROM p_group_info M LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS total FROM api_case_info A INNER JOIN p_group_info B ON B.code=A.group_id GROUP BY LEFT(B.code,3)) N ON N.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS total FROM api_case_info A INNER JOIN p_group_info B ON B.code=A.group_id INNER JOIN (SELECT info_id FROM case_suite_info WHERE case_id IN (SELECT case_id FROM core_case_info) GROUP BY info_id HAVING COUNT(1)>0) C ON C.info_id=A.api_id GROUP BY LEFT(B.code,3)) O ON O.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS tc_total FROM core_case_info A INNER JOIN p_group_info B ON B.code=A.group_id WHERE A.case_exe_plugin IN ('200','201','202') GROUP BY LEFT(B.code,3)) P ON P.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS tc_total FROM core_case_info A INNER JOIN p_group_info B ON B.code=A.group_id WHERE A.case_exe_plugin IN ('200','201','202') AND A.case_exe_type='2' GROUP BY LEFT(B.code,3)) Q ON Q.group_code=M.code LEFT JOIN (SELECT LEFT(C.code,3) AS group_code,COUNT(1) AS tc_total FROM (SELECT case_id FROM core_case_result GROUP BY case_id) A INNER JOIN core_case_info B ON B.case_id=A.case_id INNER JOIN p_group_info C ON C.code=B.group_id WHERE B.case_exe_plugin IN ('200','201','202') AND B.case_exe_type='2' GROUP BY LEFT(C.code,3)) R ON R.group_code=M.code LEFT JOIN (SELECT LEFT(C.code,3) AS group_code,COUNT(1) AS tc_total FROM (SELECT case_id FROM core_case_result WHERE case_result='1' GROUP BY case_id) A INNER JOIN core_case_info B ON B.case_id=A.case_id INNER JOIN p_group_info C ON C.code=B.group_id WHERE B.case_exe_plugin IN ('200','201','202') AND B.case_exe_type='2' GROUP BY LEFT(C.code,3)) S ON S.group_code=M.code WHERE LENGTH(M.code)='3' AND M.code LIKE '104%' ORDER BY M.code
;

-- 线上测试报告-失败栏（上线日期）
SELECT M.case_id,B.case_path,B.case_desc,(CASE B.case_exe_type WHEN '1' THEN '手工' WHEN '2' THEN '自动' END) case_exe_type,B.case_prev_data,IFNULL(C.num,0) AS case_exe_num,IFNULL(C.case_result,0) AS case_exe_result,IFNULL(C.case_real_result,'') AS case_exe_realresult FROM t_task_to_case M LEFT JOIN core_task_info A ON A.task_id=M.task_id LEFT JOIN core_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM core_case_result T INNER JOIN (SELECT task_id,case_id,MAX(case_time) AS happen_time,1 AS num FROM core_case_result GROUP BY task_id,case_id) S ON (T.task_id=T.task_id AND S.case_id=T.case_id AND S.happen_time=T.case_time)) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE A.online_time='2018-11-20' AND C.case_result!='1' AND B.group_id LIKE '104%'
;

-- 线上测试报告-明细栏（上线日期）
SELECT M.case_id,B.case_path,B.case_desc,(CASE B.case_exe_type WHEN '1' THEN '手工' WHEN '2' THEN '自动' END) case_exe_type,B.case_prev_data,IFNULL(C.num,0) AS case_exe_num,IFNULL(C.case_result,0) AS case_exe_result,IFNULL(C.case_real_result,'') AS case_exe_realresult FROM t_task_to_case M LEFT JOIN core_task_info A ON A.task_id=M.task_id LEFT JOIN core_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM core_case_result T INNER JOIN (SELECT task_id,case_id,MAX(case_time) AS happen_time,1 AS num FROM core_case_result GROUP BY task_id,case_id) S ON (T.task_id=T.task_id AND S.case_id=T.case_id AND S.happen_time=T.case_time)) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE A.online_time='2018-11-20' AND B.group_id LIKE '104%'
;

-- 线上测试报告-汇总栏（任务ID）
SELECT A.online_time,MIN(C.case_time) report_start_time,MAX(C.case_time) report_end_time,NOW() report_date,COUNT(1) report_exe_counts,(CASE B.case_exe_env  WHEN '1' THEN '测试环境' WHEN '2' THEN '灰度环境' ELSE '线上环境' END) report_env_type,SUM(CASE C.case_result WHEN '1' THEN 1 ELSE 0 END ) report_exe_pass,SUM(CASE C.case_result WHEN '2' THEN 1 ELSE 0 END) report_exe_fail,SUM(CASE C.case_result WHEN '3' THEN 1 ELSE 0 END) report_exe_exception,SUM(CASE WHEN C.case_result IS NULL THEN 1 ELSE 0 END) report_exe_not FROM t_task_to_case M LEFT JOIN core_task_info A ON A.task_id=M.task_id LEFT JOIN core_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM core_case_result T INNER JOIN (SELECT task_id,case_id,MAX(case_time) AS happen_time,1 AS num FROM core_case_result GROUP BY task_id,case_id) S ON (T.task_id=T.task_id AND S.case_id=T.case_id AND S.happen_time=T.case_time)) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE A.task_id='TASK_181120000188' AND B.group_id LIKE '104%'
;

-- 线上测试报告-信息栏（任务ID）
SELECT M.group_desc,IFNULL(N.total,0) AS total_api,IFNULL(P.tc_total,0) AS total_core,IFNULL(Q.tc_total,0) AS total_auto,IF(IFNULL(N.total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(O.total,0)/IFNULL(N.total,0))*100,5),'%')) AS rate_api,IF(IFNULL(P.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(Q.tc_total,0)/IFNULL(P.tc_total,0))*100,5),'%')) AS rate_cover,IF(IFNULL(P.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(R.tc_total,0)/IFNULL(P.tc_total,0))*100,5),'%')) AS rate_exec,IF(IFNULL(R.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(S.tc_total,0)/IFNULL(R.tc_total,0))*100,5),'%')) AS rate_pass FROM p_group_info M LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS total FROM api_case_info A INNER JOIN p_group_info B ON B.code=A.group_id GROUP BY LEFT(B.code,3)) N ON N.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS total FROM api_case_info A INNER JOIN p_group_info B ON B.code=A.group_id INNER JOIN (SELECT info_id FROM case_suite_info WHERE case_id IN (SELECT case_id FROM core_case_info) GROUP BY info_id HAVING COUNT(1)>0) C ON C.info_id=A.api_id GROUP BY LEFT(B.code,3)) O ON O.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS tc_total FROM core_case_info A INNER JOIN p_group_info B ON B.code=A.group_id WHERE A.case_exe_plugin IN ('200','201','202') GROUP BY LEFT(B.code,3)) P ON P.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS tc_total FROM core_case_info A INNER JOIN p_group_info B ON B.code=A.group_id WHERE A.case_exe_plugin IN ('200','201','202') AND A.case_exe_type='2' GROUP BY LEFT(B.code,3)) Q ON Q.group_code=M.code LEFT JOIN (SELECT LEFT(C.code,3) AS group_code,COUNT(1) AS tc_total FROM (SELECT case_id FROM core_case_result GROUP BY case_id) A INNER JOIN core_case_info B ON B.case_id=A.case_id INNER JOIN p_group_info C ON C.code=B.group_id WHERE B.case_exe_plugin IN ('200','201','202') AND B.case_exe_type='2' GROUP BY LEFT(C.code,3)) R ON R.group_code=M.code LEFT JOIN (SELECT LEFT(C.code,3) AS group_code,COUNT(1) AS tc_total FROM (SELECT case_id FROM core_case_result WHERE case_result='1' GROUP BY case_id) A INNER JOIN core_case_info B ON B.case_id=A.case_id INNER JOIN p_group_info C ON C.code=B.group_id WHERE B.case_exe_plugin IN ('200','201','202') AND B.case_exe_type='2' GROUP BY LEFT(C.code,3)) S ON S.group_code=M.code WHERE LENGTH(M.code)='3' AND M.code LIKE '104%' ORDER BY M.code
;

-- 线上测试报告-失败栏（任务ID）
SELECT M.case_id,B.case_path,B.case_desc,(CASE B.case_exe_type WHEN '1' THEN '手工' WHEN '2' THEN '自动' END) case_exe_type,B.case_prev_data,IFNULL(C.num,0) AS case_exe_num,IFNULL(C.case_result,0) AS case_exe_result,IFNULL(C.case_real_result,'') AS case_exe_realresult FROM t_task_to_case M LEFT JOIN core_task_info A ON A.task_id=M.task_id LEFT JOIN core_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM core_case_result T INNER JOIN (SELECT task_id,case_id,MAX(case_time) AS happen_time,1 AS num FROM core_case_result GROUP BY task_id,case_id) S ON (T.task_id=T.task_id AND S.case_id=T.case_id AND S.happen_time=T.case_time)) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE A.task_id='TASK_181120000188' AND C.case_result!='1' AND B.group_id LIKE '104%'
;

-- 线上测试报告-明细栏（任务ID）
SELECT M.case_id,B.case_path,B.case_desc,(CASE B.case_exe_type WHEN '1' THEN '手工' WHEN '2' THEN '自动' END) case_exe_type,B.case_prev_data,IFNULL(C.num,0) AS case_exe_num,IFNULL(C.case_result,0) AS case_exe_result,IFNULL(C.case_real_result,'') AS case_exe_realresult FROM t_task_to_case M LEFT JOIN core_task_info A ON A.task_id=M.task_id LEFT JOIN core_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM core_case_result T INNER JOIN (SELECT task_id,case_id,MAX(case_time) AS happen_time,1 AS num FROM core_case_result GROUP BY task_id,case_id) S ON (T.task_id=T.task_id AND S.case_id=T.case_id AND S.happen_time=T.case_time)) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE A.task_id='TASK_181120000188' AND B.group_id LIKE '104%'
;

-- 线上测试报告-汇总栏（批次ID）
SELECT A.online_time,MIN(C.case_time) report_start_time,MAX(C.case_time) report_end_time,NOW() report_date,COUNT(1) report_exe_counts,(CASE B.case_exe_env  WHEN '1' THEN '测试环境' WHEN '2' THEN '灰度环境' ELSE '线上环境' END) report_env_type,SUM(CASE C.case_result WHEN '1' THEN 1 ELSE 0 END ) report_exe_pass,SUM(CASE C.case_result WHEN '2' THEN 1 ELSE 0 END) report_exe_fail,SUM(CASE C.case_result WHEN '3' THEN 1 ELSE 0 END) report_exe_exception,SUM(CASE WHEN C.case_result IS NULL THEN 1 ELSE 0 END) report_exe_not FROM t_task_to_case M LEFT JOIN core_task_info A ON A.task_id=M.task_id LEFT JOIN core_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM core_case_result T) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE C.batch_id='BATCH-20181114-03544' AND B.group_id LIKE '104%'
;

-- 线上测试报告-信息栏（批次ID）
SELECT M.group_desc,IFNULL(N.total,0) AS total_api,IFNULL(P.tc_total,0) AS total_core,IFNULL(Q.tc_total,0) AS total_auto,IF(IFNULL(N.total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(O.total,0)/IFNULL(N.total,0))*100,5),'%')) AS rate_api,IF(IFNULL(P.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(Q.tc_total,0)/IFNULL(P.tc_total,0))*100,5),'%')) AS rate_cover,IF(IFNULL(P.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(R.tc_total,0)/IFNULL(P.tc_total,0))*100,5),'%')) AS rate_exec,IF(IFNULL(R.tc_total,0)=0,'0.000%',CONCAT(LEFT((IFNULL(S.tc_total,0)/IFNULL(R.tc_total,0))*100,5),'%')) AS rate_pass FROM p_group_info M LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS total FROM api_case_info A INNER JOIN p_group_info B ON B.code=A.group_id GROUP BY LEFT(B.code,3)) N ON N.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS total FROM api_case_info A INNER JOIN p_group_info B ON B.code=A.group_id INNER JOIN (SELECT info_id FROM case_suite_info WHERE case_id IN (SELECT case_id FROM core_case_info) GROUP BY info_id HAVING COUNT(1)>0) C ON C.info_id=A.api_id GROUP BY LEFT(B.code,3)) O ON O.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS tc_total FROM core_case_info A INNER JOIN p_group_info B ON B.code=A.group_id WHERE A.case_exe_plugin IN ('200','201','202') GROUP BY LEFT(B.code,3)) P ON P.group_code=M.code LEFT JOIN (SELECT LEFT(B.code,3) AS group_code,COUNT(1) AS tc_total FROM core_case_info A INNER JOIN p_group_info B ON B.code=A.group_id WHERE A.case_exe_plugin IN ('200','201','202') AND A.case_exe_type='2' GROUP BY LEFT(B.code,3)) Q ON Q.group_code=M.code LEFT JOIN (SELECT LEFT(C.code,3) AS group_code,COUNT(1) AS tc_total FROM (SELECT case_id FROM core_case_result GROUP BY case_id) A INNER JOIN core_case_info B ON B.case_id=A.case_id INNER JOIN p_group_info C ON C.code=B.group_id WHERE B.case_exe_plugin IN ('200','201','202') AND B.case_exe_type='2' GROUP BY LEFT(C.code,3)) R ON R.group_code=M.code LEFT JOIN (SELECT LEFT(C.code,3) AS group_code,COUNT(1) AS tc_total FROM (SELECT case_id FROM core_case_result WHERE case_result='1' GROUP BY case_id) A INNER JOIN core_case_info B ON B.case_id=A.case_id INNER JOIN p_group_info C ON C.code=B.group_id WHERE B.case_exe_plugin IN ('200','201','202') AND B.case_exe_type='2' GROUP BY LEFT(C.code,3)) S ON S.group_code=M.code WHERE LENGTH(M.code)='3' AND M.code LIKE '104%' ORDER BY M.code
;

-- 线上测试报告-失败栏（批次ID）
SELECT M.case_id,B.case_path,B.case_desc,(CASE B.case_exe_type WHEN '1' THEN '手工' WHEN '2' THEN '自动' END) case_exe_type,B.case_prev_data,IFNULL(C.num,0) AS case_exe_num,IFNULL(C.case_result,0) AS case_exe_result,IFNULL(C.case_real_result,'') AS case_exe_realresult FROM t_task_to_case M LEFT JOIN core_task_info A ON A.task_id=M.task_id LEFT JOIN core_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM core_case_result T) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE C.batch_id='BATCH-20181114-03544' AND C.case_result!='1' AND B.group_id LIKE '104%'
;

-- 线上测试报告-明细栏（批次ID）
SELECT M.case_id,B.case_path,B.case_desc,(CASE B.case_exe_type WHEN '1' THEN '手工' WHEN '2' THEN '自动' END) case_exe_type,B.case_prev_data,IFNULL(C.num,0) AS case_exe_num,IFNULL(C.case_result,0) AS case_exe_result,IFNULL(C.case_real_result,'') AS case_exe_realresult FROM t_task_to_case M LEFT JOIN core_task_info A ON A.task_id=M.task_id LEFT JOIN core_case_info B ON B.case_id=M.case_id LEFT JOIN (SELECT 1 AS num,T.* FROM core_case_result T) C ON (C.task_id=M.task_id AND C.case_id=M.case_id) WHERE C.batch_id='BATCH-20181114-03544' AND B.group_id LIKE '104%'
;